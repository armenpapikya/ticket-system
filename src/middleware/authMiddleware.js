/* eslint-disable no-undef */
import jwt from 'jsonwebtoken';
import dotenv from 'dotenv';

dotenv.config();

const authMiddleware = (req, res, next) => {
  try {
    const authHeader = req.headers.authorization;

    if (!authHeader) {
      return res.status(401).json({ message: "’Ñ’∏÷Ç’ø÷Ñ’® ’¥’•÷Ä’™’æ’°’Æ ’ß. ‘±÷Ä’ø’°’∞’°’Ω’°’∂’•’¨’´ ’£’¨’∏÷Ç’≠’® ’¢’°÷Å’°’Ø’°’µ’∏÷Ç’¥ ’ß." });
    }

    if (!authHeader.startsWith('Bearer ')) {
      return res.status(401).json({ message: "’Ñ’∏÷Ç’ø÷Ñ’® ’¥’•÷Ä’™’æ’°’Æ ’ß. ’ç’≠’°’¨ ’ø’∏’¥’Ω’´ ’±÷á’°’π’°÷É." });
    }

    const token = authHeader.split(" ")[1];

    if (process.env.NODE_ENV !== 'production') {
      console.log("üîë ’è’∏’¥’Ω’´ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’∏÷Ç’∂:", token);
    }

    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    req.user = decoded;

    if (process.env.NODE_ENV !== 'production') {
      console.log("‚úÖ ’è’∏’¥’Ω’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’æ’•÷Ä’¨’∏÷Ç’Æ’æ’•÷Å:", decoded);
    }

    next();
  } catch (err) {
    console.error("‚ùå ’è’∏’¥’Ω’´ ’æ’•÷Ä’¨’∏÷Ç’Æ’∏÷Ç’©’µ’°’∂ ’Ω’≠’°’¨:", err.message);

    if (err.name === 'TokenExpiredError') {
      return res.status(401).json({ message: "’è’∏’¥’Ω’´ ’™’°’¥’Ø’•’ø’® ’°’æ’°÷Ä’ø’æ’•’¨ ’ß÷â" });
    }

    if (err.name === 'JsonWebTokenError') {
      return res.status(403).json({ message: "’ç’≠’°’¨ ’ø’∏’¥’Ω÷â" });
    }

    return res.status(500).json({ message: "’ç’≠’°’¨ ’Ω’°÷Ä÷Ñ’¥’°’∂ ’™’°’¥’°’∂’°’Ø." });
  }
};

export default authMiddleware;
